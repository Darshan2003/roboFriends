{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundry.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","Scroll","props","style","overflow","background","height","children","ErrorBoundry","state","hasError","this","setState","Component","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAeeA,EAXH,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,GAAGC,EAAc,EAAdA,KAAKC,EAAS,EAATA,MAClB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACpD,gCACI,6BAAKJ,IACL,4BAAIC,WCYLI,EAlBC,SAAC,GAChB,IADiBC,EAClB,EADkBA,OAEd,OACI,mCAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACA,cAAC,EAAD,CAEAV,GAAIS,EAAKT,GACTC,KAAMQ,EAAKR,KACXC,MAAOO,EAAKP,OAHPO,EAAKT,UCHfW,EAPD,SAACC,GACX,OACI,qBAAKC,MAAO,CAACC,SAAS,SAASC,WAAY,qBAAqBC,OAAO,SAAvE,SACKJ,EAAMK,YCkBJC,E,kDApBX,WAAYN,GACX,IAAD,8BACI,cAAMA,IACDO,MAAM,CACPC,UAAU,GAHlB,E,qDAMA,WAEIC,KAAKC,SAAS,CAACF,UAAU,M,oBAE7B,WAEI,OAAIC,KAAKF,MAAMC,SACJ,2DAGJC,KAAKT,MAAMK,a,GAlBCM,aCaZC,EAbE,SAAC,GACjB,IADkBC,EACnB,EADmBA,aAEf,OACI,qBAAKtB,UAAU,MAAf,SAEA,uBACAA,UAAU,mCACTuB,KAAK,SACJC,YAAY,gBACZC,SAAUH,OCyCLI,E,kDA9CX,aACC,IAAD,8BACI,gBAMJC,eAAe,SAACC,GACZ,EAAKT,SAAS,CAACU,YAAYD,EAAME,OAAOC,SANxC,EAAKf,MAAO,CACRZ,OAAQ,GACRyB,YAAa,IAJrB,E,qDAUA,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAQ,EAAKjB,SAAS,CAACf,OAAOgC,S,oBAExC,WACI,MAA2BlB,KAAKF,MAAzBZ,EAAP,EAAOA,OAAOyB,EAAd,EAAcA,YACRQ,EAAejC,EAAOkC,QAAO,SAAAC,GAC/B,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAQpC,EAAOsC,OAWP,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWsB,aAAcJ,KAAKS,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUvB,OAAQiC,WAdlC,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWsB,aAAcJ,KAAKS,iBAC9B,gD,GA3BEP,aCOHuB,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCGdO,IAASC,OACP,mCAEC,cAAC,EAAD,MAGDC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.4640a2e2.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\n\r\nconst Card =({id,name,email})=>{\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList =({robots})=>\r\n{\r\n    return(\r\n        <>\r\n            {\r\n                robots.map((user,i)=>{\r\n                    return(\r\n                    <Card \r\n                    key={user.id}\r\n                    id={user.id} \r\n                    name={user.name} \r\n                    email={user.email}/>);\r\n                })\r\n            }\r\n            \r\n        </>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll =(props)=>{\r\n    return(\r\n        <div style={{overflow:'scroll',background: 'rgba(0, 0, 0, 0.2)',height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch()\r\n    {\r\n        this.setState({hasError: true})\r\n    }\r\n    render()\r\n    {\r\n        if (this.state.hasError) {\r\n            return <h1>Something With Went Wrong</h1>\r\n            \r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nconst SearchBox =({searchChange})=>\r\n{\r\n    return(\r\n        <div className='pa2'>\r\n\r\n        <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n         type=\"search\"\r\n          placeholder=\"search robots\"\r\n          onChange={searchChange} />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport Scroll from '../components/Scroll.js';\r\nimport ErrorBoundry from '../components/ErrorBoundry.js'\r\nimport SearchBox from '../components/SearchBox.js';\r\nclass App extends Component{\r\n    constructor()\r\n    {\r\n        super();    \r\n        this.state ={\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchField:event.target.value})    \r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users=>{this.setState({robots:users})});\r\n    }\r\n    render(){\r\n        const {robots,searchField}=this.state;\r\n        const filteredRobots=robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n        return !robots.length?\r\n        (\r\n            <div className='tc'>\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <h1>Loading</h1>\r\n                \r\n            </div>\r\n        )\r\n            :\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className=\"f1\">RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n             \r\n\r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport './containers/App.css';\n\nimport 'tachyons';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    \n   <App/>\n  </>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}